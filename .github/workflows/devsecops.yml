name: DevSecOps Workflow

on:
  push:
    branches:
      - main

jobs:
  code-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.1'
    - name: Code Scan with Snyk
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        args: --severity-threshold=critical

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: code-scan
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: omercelikel23/flask-docker-app:latest

  image-scan:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - name: Scan the Docker image with Snyk
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: omercelikel23/flask-docker-app:latest
        command: test
        args: --severity-threshold=critical

  build-push-gcr:
    name: Build and Deploy to GKE
    needs: image-scan
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: My First Project
      #PROJECT_ID: polar-standard-412817
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: autopilot-cluster-1
      GKE_ZONE: europe-southwest1
      DEPLOYMENT_NAME: github-actions-gke-deployment
      IMAGE: github-actions-gke-image
      TAG: 1.0.0


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get GKE Credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build Docker Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .

      - name: Publish Docker Image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy Image to GKE cluster
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide

      

        


    
  
#  deploy-to-eks:
#    runs-on: ubuntu-latest
#    needs: image-scan
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: eu-north-1
#      
#      - name: Deploy to EKS
#        run: |
#          aws eks --region eu-north-1 update-kubeconfig --name cluster
#          kubectl apply -f deployment.yaml